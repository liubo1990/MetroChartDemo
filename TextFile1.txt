1. change namespace - remember to back up everything really well  beforehand.
	There is a file called XAMLReplaceTargets which has caused issues when I do a copy and replace
	I think that is what is causing all the issues with my other version not working
	Does there need to be information about this file put somewhere?
2. Main Key is some sort of signing key - is it mine now? Can I / should I remove it?
	Yes, if its not mine
3. Try puttiing this into another application and write information on how to do it


****************************
** when does xamlReplace.tagets get run? Ide like ot to run each build?
** looks like it may not be compatible - there are errors
** or something else. So stick with doing a clean build first
***********************

** go through generic.xaml and remove the old scatter only stuff**

SCATTER CHART TO DO
1 .do I want to do the mouse events and which ones if I do
// RegisterMouseEvents(bullet); -- do I want to do this on some things?
 override void InternalOnApplyTemplate()
 1.5 - background of plot area (canvas) could be coloured
 1.6 - what other values should be coloured that previous version can?

2. numbers arent showing ** they used to be on the rectangle the bar was drawn on
- this is now missing. Either put it back so I can draw the values, leave the number out,
or draw the numbers in the same code as the bullets?
DECISION - THERE IS NO NUMBERS DRAWN SO MUST PUT IN THE HOVER ON THE GRAPHS
(ie each bullet and line needs a mouse over - which I cant do on geometries!!!!!!!!! )

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
OR canvas is a UI element? Create a [] of information about bullets, and add each to the canvas
as UI elements, so then can mouse over without hassles. Psition using margins.
%%%%%%%%%%%%%%

mouse over line (path) is possible
maybe add the possiblilty for numbers using the old method on top of mine, and mouse over these.
then draw the bullets (if needed) in the same colour. or make them transparent if mouse over still works?

3. Enable the numbers to be turned off -hmm, they arent on!!
4. legend

this is how the other pieces are bound - do I need to do something similar?
it gets the data from the datapoint into the scatterPiece
<local:GAScatterPiece
                                    Background="{Binding Path=ItemBrush}"  
                                    SelectedBrush="{Binding Path=SelectedBrush}"  
                                    Percentage="{Binding Path=PercentageFromMaxDataPointValue}"                                                                                                 
                                    IsClickedByUser="{Binding Path=IsClickedByUser, Mode=TwoWay}"
                                    IsSelected="{Binding Path=IsSelected}"
                                    ClientWidth="{Binding Path=RealWidth, ElementName=itemsControl}"
                                    ClientHeight="{Binding Path=RealHeight, ElementName=itemsControl}"
                                    >



Will have two charts - GAScatterLineChart and GAColumnScatterLineChart

** have a multiTypeSeries where you can set the type to be line, bullet, or both
** this is how the scatter chart should work instead of the current scatter
** but this shows I can do IT!

** ** create .cs file in the code, and a link to it in  the librarby
** ** update the xaml in the code and it will get copied to the library
** ** can style the charts in the test app Graohs.xaml
** ** put custom bullet and line styles in Graohs.xaml BUT leave the std GA ones alone


setup notes
If using the solution and not the .dll only (not sure if you can do this?) then add
reference to the wpf one

Alter the Generic.xaml in the MetroChart (with the code) and the other one gets updated
Always copy link to .WPF folder too